

codegen double* i_unused;

fn codegen get7()->i8:
	return 7;
end


fn codegen addnums(int a, int b)->int:
	return a+b;
end

fn codegen subnums(int a, int b)->int:
	return a-b;
end

class myClass
	int x
	int y
	int z
end

class containsSubClass
	myClass alfred
	myClass bigboy
	sqword bruh
end	


method codegen myClass:doStuff()->u64:
	if(this.x == 3)
		__builtin_puts("I can indeed see that.");
	end
	this.x = 3;
	return 0;
end

fn codegen assignArrayMember(int* a):
	a[3] = 2;
	return;
end

fn codegen manipClass(myClass* p):
	if(p.x == 3)
		__builtin_puts("I can also indeed see that.");
	end
	p.x = 3;
end

fn codegen switch_test(int a):

	switch(a) is1, is2, is3;
	:is1
		__builtin_puts("I see a 0!");
	return;
	:is2
		__builtin_puts("I see a 1!");
	return;

	:is3
		__builtin_puts("I see a 2!");
		__builtin_puts("Prepare for a test of FOR:");
	float i
		if(1)
			i = 0;
			for(i=1, i<=6, i++)
				int q;
				//goto getout;
				__builtin_puts("!");
				int j
				//break
				for(j = 0, j < 2, j++)
					__builtin_puts("I should print twice six times! Unless you put a break here:");continue break
				end
			end
			:getout
			__builtin_puts("Got out!");
		end
	return;

	return;

end


codegen int myGlobalLoopCounter = 10;
codegen double tail_test_pow = 0;

//not exactly using 'tail'...
fn codegen tail_test2()->u64:
	if(myGlobalLoopCounter > 0)
		myGlobalLoopCounter--;
		return 1 + tail_test2();
	end
	return 1.0e+1;
end

fn codegen tail_test()->i64:
	myGlobalLoopCounter--;
	tail_test_pow = tail_test_pow + tail_test_pow;
	if(myGlobalLoopCounter > 1)
		tail tail_test
	end
	return tail_test_pow;
end



fn codegen codegen_main():
	myClass classy;
	myClass* f;
	classy.x = 3;
	double i;
	__builtin_puts("_______________________________");
	classy:doStuff();
	manipClass(classy);
	__builtin_puts("_______________________________");

	
	classy.x = 3;
	switch_test(2);


	f = classy;
	__builtin_puts("________________________Now for the real test!");
	f.x = 7;
	i = classy.x;

	
	if(0)
		__builtin_puts("Yes!");
	elseif(0)
		__builtin_puts("Maybe?");
	elseif(1)
		__builtin_puts("Perhaps?");
	else
		__builtin_puts("No!");
	end

	containsSubClass qqq;
	qqq.alfred := classy;
	qqq.bigboy := f;
	f.x = 3;
	i = qqq.bigboy.x;


	i = 0;

	myGlobalLoopCounter = 3;
	tail_test_pow = 2.0;
	i = tail_test();
	myGlobalLoopCounter = 10;
	i = tail_test2();

	i = subnums(3,0);

	while((i > 0) /*|| 1*/
	)
		__builtin_puts("count me");
		i--;
	end
	__builtin_puts("Goodbye!");
	return;
end
